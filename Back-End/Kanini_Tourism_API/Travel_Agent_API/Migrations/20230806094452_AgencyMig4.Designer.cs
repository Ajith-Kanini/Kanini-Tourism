// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelAgencyManagementAPI.DB;

#nullable disable

namespace TravelAgencyManagementAPI.Migrations
{
    [DbContext(typeof(AgencyContext))]
    [Migration("20230806094452_AgencyMig4")]
    partial class AgencyMig4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.DTO.HotelDTO", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<int?>("PackagesPackageId")
                        .HasColumnType("int");

                    b.HasKey("HotelId");

                    b.HasIndex("PackagesPackageId");

                    b.ToTable("HotelDTO");
                });

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.DTO.TouristAttractionDTO", b =>
                {
                    b.Property<int>("TouristAttractionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TouristAttractionId"));

                    b.Property<int?>("PackagesPackageId")
                        .HasColumnType("int");

                    b.HasKey("TouristAttractionId");

                    b.HasIndex("PackagesPackageId");

                    b.ToTable("TouristAttractionDTO");
                });

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.Packages", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackageImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PackageId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.TourOffer", b =>
                {
                    b.Property<int>("TourOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourOfferId"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TourOfferId");

                    b.HasIndex("AgentId");

                    b.ToTable("TourOffers");
                });

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.TravelAgent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentId"));

                    b.Property<string>("AgencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentRegistrationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AgentStatus")
                        .HasColumnType("bit");

                    b.HasKey("AgentId");

                    b.ToTable("TravelAgents");
                });

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.DTO.HotelDTO", b =>
                {
                    b.HasOne("TravelAgencyManagementAPI.Models.Packages", null)
                        .WithMany("HotelIds")
                        .HasForeignKey("PackagesPackageId");
                });

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.DTO.TouristAttractionDTO", b =>
                {
                    b.HasOne("TravelAgencyManagementAPI.Models.Packages", null)
                        .WithMany("TouristAttractionIds")
                        .HasForeignKey("PackagesPackageId");
                });

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.TourOffer", b =>
                {
                    b.HasOne("TravelAgencyManagementAPI.Models.TravelAgent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("TravelAgencyManagementAPI.Models.Packages", b =>
                {
                    b.Navigation("HotelIds");

                    b.Navigation("TouristAttractionIds");
                });
#pragma warning restore 612, 618
        }
    }
}
